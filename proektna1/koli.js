
    // Automatic Slideshow - change image every 3 seconds
    var myIndex = 0;
    carousel();
    
    function carousel() {
        var i;
        var x = document.getElementsByClassName("mySlides");
        for (i = 0; i < x.length; i++) {
           x[i].style.display = "none";
        }
        myIndex++;
        if (myIndex > x.length) { myIndex = 1; }
        x[myIndex - 1].style.display = "block";
        setTimeout(carousel, 3000);
    }
    
      // –ü–æ–¥–∞—Ç–æ—Ü–∏ –∑–∞ –Ω–æ–≤–∏ –∏ –ø–æ–ª–æ–≤–Ω–∏ –≤–æ–∑–∏–ª–∞
    const postsData = {
        newCars: [
            { id: 1, imageUrl: 'https://vehicle-images.dealerinspire.com/a623-110007014/thumbnails/large/1G1FB3DS3R0118051/30220e78398d010453c76bbe6cb78b09.jpg', likes: 0, comments: [] },
            { id: 2, imageUrl: 'https://i.ytimg.com/vi/KAS3A3qzO8g/maxresdefault.jpg', likes: 0, comments: [] },
            { id: 3, imageUrl: 'https://vehicle-images.dealerinspire.com/bfe8-110008839/W1KAF8HB2RR229057/881049c543ebaf88799f9ea99707f9f0.jpg', likes: 0, comments: [] },
           
            
        ],
        usedCars: [
            { id: 1, imageUrl: 'https://dasweltauto.mk/?h=usedcarphoto&usedcarphotoId=31881&width=460&height=345?%3E.jpg', likes: 0, comments: [] },
            { id: 2, imageUrl: 'https://deluxe-auto.com.mk/_next/image?url=https%3A%2F%2Fdeluxeauto.s3.eu-central-1.amazonaws.com%2F2c347a4c-18be-4b71-9332-e6586053421b-EOSR9747.jpg&w=3840&q=75', likes: 0, comments: [] },
            { id: 3, imageUrl: 'https://dasweltauto.mk/?h=usedcarphoto&usedcarphotoId=45684&width=640&height=480&jpg', likes: 0, comments: [] },
            
        ]
    };
    
    // –§—É–Ω–∫—Ü–∏—ò–∞ –∑–∞ —Ä–µ–Ω–¥–µ—Ä–∏—Ä–∞—ö–µ –æ–±—ò–∞–≤–∏
    function renderPosts(posts, gridId, prefix) {
        const grid = document.getElementById(gridId);
        grid.innerHTML = '';
        posts.forEach(post => {
            const postElement = createPostElement(post, prefix);
            grid.appendChild(postElement);
        });
    }
    
    // –§—É–Ω–∫—Ü–∏—ò–∞ –∑–∞ –∫—Ä–µ–∏—Ä–∞—ö–µ –µ–ª–µ–º–µ–Ω—Ç –∑–∞ –æ–±—ò–∞–≤–∞
    function createPostElement(post, prefix) {
        const postDiv = document.createElement('div');
        postDiv.className = 'instagram-post';
    
        postDiv.innerHTML = `
            <img src="${post.imageUrl}" alt="Instagram post">
            <div class="post-actions">
                <button onclick="likePost('${prefix}', ${post.id})" class="like-button">‚ù§Ô∏è ${post.likes}</button>
                <button onclick="toggleComments('${prefix}', ${post.id})" class="comment-button">üí¨ ${post.comments.length}</button>
            </div>
            <div class="comments-section" id="comments-${prefix}-${post.id}" style="display: none;">
                <div class="comments-list">
                    ${post.comments.map(comment => `<p>${comment}</p>`).join('')}
                </div>
                <input type="text" placeholder="–î–æ–¥–∞—ò –∫–æ–º–µ–Ω—Ç–∞—Ä..." onkeypress="addComment(event, '${prefix}', ${post.id})" class="comment-input">
            </div>
        `;
    
        return postDiv;
    }
    
    // –§—É–Ω–∫—Ü–∏—ò–∞ –∑–∞ –ª–∞—ò–∫–Ω—É–≤–∞—ö–µ –Ω–∞ –æ–±—ò–∞–≤–∞
    window.likePost = function(prefix, postId) {
        const posts = postsData[prefix];
        const post = posts.find(p => p.id === postId);
        if (post) {
            post.likes++;
            renderPosts(posts, prefix === 'newCars' ? 'instagramGrid' : 'usedInstagramGrid', prefix);
        }
    };
    
    // –§—É–Ω–∫—Ü–∏—ò–∞ –∑–∞ –ø—Ä–∏–∫–∞–∂—É–≤–∞—ö–µ –Ω–∞ –∫–æ–º–µ–Ω—Ç–∞—Ä–∏
    window.toggleComments = function(prefix, postId) {
        const commentsSection = document.getElementById(`comments-${prefix}-${postId}`);
        if (commentsSection) {
            commentsSection.style.display = commentsSection.style.display === 'none' ? 'block' : 'none';
        }
    };
    
    // –§—É–Ω–∫—Ü–∏—ò–∞ –∑–∞ –¥–æ–¥–∞–≤–∞—ö–µ –∫–æ–º–µ–Ω—Ç–∞—Ä
    window.addComment = function(event, prefix, postId) {
        if (event.key === 'Enter') {
            const posts = postsData[prefix];
            const post = posts.find(p => p.id === postId);
            const input = event.target;
    
            if (post && input.value.trim()) {
                post.comments.push(input.value.trim());
                input.value = '';
                renderPosts(posts, prefix === 'newCars' ? 'instagramGrid' : 'usedInstagramGrid', prefix);
            }
        }
    };
    
    // –ü–æ—á–µ—Ç–Ω–æ —Ä–µ–Ω–¥–µ—Ä–∏—Ä–∞—ö–µ
    renderPosts(postsData.newCars, 'instagramGrid', 'newCars');
    renderPosts(postsData.usedCars, 'usedInstagramGrid', 'usedCars');
    
    
    
    
    
    
    
    
    document.getElementById('surveyForm').addEventListener('submit', function(e) {
        e.preventDefault();
        
    
        const formData = new FormData(this);
        const surveyData = {
            rating: formData.get('rating'),
            likes: this.querySelector('textarea:nth-of-type(1)').value,
            improvements: this.querySelector('textarea:nth-of-type(2)').value
        };
    
        console.log('Survey submitted:', surveyData);
        
    
        this.reset();
        alert('–í–∏ –±–ª–∞–≥–æ–¥–∞—Ä–∏–º–µ –∑–∞ –æ–¥–≥–æ–≤–æ—Ä–∏—Ç–µ!');
    });
    
    
    
    // –°–µ–ª–µ–∫—Ç–∏—Ä–∞—ö–µ –Ω–∞ —Å–∏—Ç–µ —Ñ–æ—Ä–º–∏ —Å–æ –¥–∞–¥–µ–Ω–∞—Ç–∞ –∫–ª–∞—Å–∞
    const forms = document.querySelectorAll('.test-drive-form');
    
    forms.forEach(form => {
        form.addEventListener('submit', function(event) {
            event.preventDefault();
    
            const name = form.querySelector('[id="fullName"]').value;
            const carModel = form.querySelector('[id="carModel"]').value;
    
            alert(`–£—Å–ø–µ—à–Ω–æ –µ –∑–∞–∫–∞–∂–∞–Ω —Ç–µ—Ä–º–∏–Ω –∑–∞ —Ç–µ—Å—Ç –≤–æ–∑–µ—ö–µ –Ω–∞ –∏–º–µ: ${name} –∑–∞ –º–æ–¥–µ–ª: ${carModel}`);
            form.reset();
        });
    });
    
    
    
    
    function showPopup() {
        
        alert("–ê–Ω–∫–µ—Ç–∞—Ç–∞ –µ –∑–∞–≤—Ä—à–µ–Ω–∞!");
    }
    
    
   
    
    
    //anketa
    document.getElementById('surveyForm').addEventListener('submit', function(event) {
        event.preventDefault();
    
        // –ü—Ä–µ–∑–µ–º–∞—ö–µ –Ω–∞ –≤—Ä–µ–¥–Ω–æ—Å—Ç–∏ –æ–¥ —Ñ–æ—Ä–º–∞—Ç–∞
        const rating = document.querySelector('input[name="rating"]:checked')?.value;
        const likedMost = document.getElementById('likedMost').value.trim();
        const improvementSuggestions = document.getElementById('improvementSuggestions').value.trim();
    
        // –ü—Ä–∏–∫–∞–∑ –Ω–∞ —Ä–µ–∑—É–ª—Ç–∞—Ç–∏—Ç–µ
        alert(`–í–∏ –±–ª–∞–≥–æ–¥–∞—Ä–∏–º–µ –∑–∞ –≤–∞—à–µ—Ç–æ –º–∏—Å–ª–µ—ö–µ!
        –û—Ü–µ–Ω–∫–∞ –Ω–∞ —Å–∞—ò—Ç–æ—Ç: ${rating}`);
       
    
        // –†–µ—Å–µ—Ç–∏—Ä–∞—ö–µ –Ω–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –ø–æ –ø–æ–¥–Ω–µ—Å—É–≤–∞—ö–µ
        event.target.reset();
    });
    
    //login
    
    document.addEventListener('DOMContentLoaded', function() {
        const loginPopup = document.getElementById('loginPopup');
        const closeBtn = document.getElementById('closeBtn');
        const loginForm = document.getElementById('loginForm');
    
        // –ü—Ä–æ–≤–µ—Ä–∏ –¥–∞–ª–∏ –∫–æ—Ä–∏—Å–Ω–∏–∫–æ—Ç –µ –ª–æ–≥–∏—Ä–∞–Ω –≤–æ —Ç–µ–∫–æ–≤–Ω–∞—Ç–∞ —Å–µ—Å–∏—ò–∞
        if (sessionStorage.getItem('isLoggedIn')) {
            console.log('–ö–æ—Ä–∏—Å–Ω–∏–∫–æ—Ç –≤–µ—ú–µ –µ –ª–æ–≥–∏—Ä–∞–Ω –∑–∞ –æ–≤–∞–∞ —Å–µ—Å–∏—ò–∞. –°–∫—Ä–∏–µ popup.');
            // –°–∫—Ä–∏–µ –≥–æ popup –∞–∫–æ –∫–æ—Ä–∏—Å–Ω–∏–∫–æ—Ç –µ –≤–µ—ú–µ –ª–æ–≥–∏—Ä–∞–Ω
            loginPopup.style.display = 'none';
        } else {
            console.log('–ö–æ—Ä–∏—Å–Ω–∏–∫–æ—Ç –Ω–µ –µ –ª–æ–≥–∏—Ä–∞–Ω –∑–∞ –æ–≤–∞–∞ —Å–µ—Å–∏—ò–∞. –ü—Ä–∏–∫–∞–∂–∏ popup.');
            // –ü—Ä–∏–∫–∞–∂–∏ –≥–æ popup –∞–∫–æ –∫–æ—Ä–∏—Å–Ω–∏–∫–æ—Ç –Ω–µ –µ –ª–æ–≥–∏—Ä–∞–Ω
            loginPopup.style.display = 'flex';
        }
    
        // –û–±—Ä–∞–±–æ—Ç–∏ –≥–æ –ø—Ä–∞—ú–∞—ö–µ—Ç–æ –Ω–∞ —Ñ–æ—Ä–º–∞—Ç–∞
        loginForm.addEventListener('submit', function(event) {
            event.preventDefault(); // –ü—Ä–µ–≤–µ–Ω–∏—Ä–∞—ò –≥–æ –æ–±–Ω–æ–≤—É–≤–∞—ö–µ—Ç–æ –Ω–∞ —Å—Ç—Ä–∞–Ω–∞—Ç–∞ –ø–æ –ø—Ä–∞—ú–∞—ö–µ—Ç–æ –Ω–∞ —Ñ–æ—Ä–º–∞—Ç–∞
    
            const email = document.getElementById('email').value;
            const password = document.getElementById('password').value;
    
            console.log('–û–±–∏–¥ –∑–∞ –ª–æ–≥–∏—Ä–∞—ö–µ —Å–æ:', email, password);
    
            // –°–∏–º—É–ª–∏—Ä–∞—ò —É—Å–ø–µ—à–µ–Ω –ª–æ–≥–∏–Ω —Ç–∞–∫–∞ —à—Ç–æ —ú–µ —Å–µ –ø–æ—Å—Ç–∞–≤–∏ —Ñ–ª–∞–≥ –≤–æ sessionStorage
            sessionStorage.setItem('isLoggedIn', 'true');
            loginPopup.style.display = 'none'; // –ó–∞—Ç–≤–æ—Ä–∏ –≥–æ popup –ø–æ –ª–æ–≥–∏—Ä–∞—ö–µ—Ç–æ
    
            alert('–õ–æ–≥–∏—Ä–∞—ö–µ—Ç–æ –±–µ—à–µ —É—Å–ø–µ—à–Ω–æ!');
        });
    
        // –ó–∞—Ç–≤–æ—Ä–∏ –≥–æ popup –∫–æ–≥–∞ —ú–µ —Å–µ –∫–ª–∏–∫–Ω–µ –Ω–∞ –∫–æ–ø—á–µ—Ç–æ "x"
        closeBtn.addEventListener('click', function() {
            loginPopup.style.display = 'none';
        });
    });
    